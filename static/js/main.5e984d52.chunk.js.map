{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","newMovie","props","onAdd","clearForm","this","onSubmit","htmlFor","type","id","onChange","required","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5e984d52.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n    const newMovie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    this.props.onAdd(newMovie);\n    this.clearForm();\n  }\n\n  clearForm = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  render() {\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n\n    return (\n      <form\n        className=\"form\"\n        onSubmit={this.handleSubmit}\n      >\n        <label htmlFor=\"title\">\n          Title:\n        </label>\n        <input\n          type=\"text\"\n          id=\"title\"\n          name=\"title\"\n          value={title}\n          onChange={this.handleChange}\n          required\n        />\n\n        <label htmlFor=\"description\">\n          Description:\n        </label>\n        <input\n          type=\"text\"\n          id=\"description\"\n          name=\"description\"\n          value={description}\n          onChange={this.handleChange}\n          required\n        />\n\n        <label htmlFor=\"imgUrl\">\n          ImgUrl:\n        </label>\n        <input\n          type=\"text\"\n          id=\"imgurl\"\n          name=\"imgUrl\"\n          value={imgUrl}\n          onChange={this.handleChange}\n          required\n        />\n\n        <label htmlFor=\"imdbUrl\">\n          ImdbUrl:\n        </label>\n        <input\n          type=\"text\"\n          id=\"imdbUrl\"\n          name=\"imdbUrl\"\n          value={imdbUrl}\n          onChange={this.handleChange}\n          required\n        />\n\n        <label htmlFor=\"imdbId\">\n          ImdbId:\n        </label>\n        <input\n          type=\"text\"\n          id=\"imdbId\"\n          name=\"imdbId\"\n          value={imdbId}\n          onChange={this.handleChange}\n          required\n        />\n\n        <button type=\"submit\">\n          Add Movie\n        </button>\n\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie\n            onAdd={this.addMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}